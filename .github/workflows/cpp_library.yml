name: "CppLib"

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - main
      - dev

env:
  MACOSX_DEPLOYMENT_TARGET: "10.15"

jobs:
  build:
    name: Cpp Lib
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-2019, macos-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: install xorg-dev on ubuntu
      if: ${{ matrix.platform == 'ubuntu-latest' }}
      run: ./ci_scripts/install_xorg_dev.sh

    # Install OpenCV (ubuntu & macos)
    - name: install OpenCV (ubuntu)
      if: ${{ matrix.platform == 'ubuntu-latest' }}
      run: sudo apt-get install -y libopencv-dev
    - name: install OpenCV (macos)
      if: ${{ matrix.platform == 'macos-latest' }}
      run: brew install opencv

    # Install conan & pybind11
    - name: install conan and pybind11 (linux and ubuntu)
      if: ${{ matrix.platform != 'windows-2019' }}
      run:  ./ci_scripts/install_conan_pybind11.sh
    - name: install conan and pybind11 (windows)
      if: ${{ matrix.platform == 'windows-2019' }}
      run: |
        python3 -m pip install conan
        conan profile new default --detect
        python3 -m pip install pybind11

    - name: Download cmake
      run: |
        wget https://github.com/Kitware/CMake/releases/download/v3.25.1/cmake-3.25.1-windows-x86_64.zip
        7z x cmake-3.25.1-windows-x86_64.zip

    - name: Setup interactive tmate session
      if: ${{ matrix.platform == 'windows-2019' }}
      uses: mxschmitt/action-tmate@v3


    - name: Build and install
      shell: bash
      run: |
        # On Windows, we install OpenCV via cmake which download a prebuilt static library
        echo RUNNER_OS=$RUNNER_OS
        if [ $RUNNER_OS = "Windows" ]; then export IMGUIBUNDLE_OPENCV_USE_PREBUILT_STATIC_WIN_VC17=ON; fi
        echo IMGUIBUNDLE_OPENCV_USE_PREBUILT_STATIC_WIN_VC17=$IMGUIBUNDLE_OPENCV_USE_PREBUILT_STATIC_WIN_VC17

        mkdir build
        cd build

        # cmake .. -DIMGUI_BUNDLE_WITH_IMMVISION=ON -DIMGUI_BUNDLE_BUILD_PYTHON=ON -DCMAKE_BUILD_TYPE=Release
        cmake .. -DIMGUI_BUNDLE_BUILD_PYTHON=ON -DCMAKE_BUILD_TYPE=Release

        cmake --build . --config Release
